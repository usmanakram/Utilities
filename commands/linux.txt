To run a command as "root" user, put "sudo" front of the command.

Shorten terminal default string
	$ export PS1="\u$ "

To print your entered commands history
	$ history



===================
Files & Directories
===================
Get current directory path
	$ pwd

List down files & directories inside current directory
	$ ls
	For all (included hidden)
	$ ls -a
	For extra info
	$ ls -l

To change directory
	$ cd <directory name>

Go to system's absolute root
	$ cd /

Go to current user's home directory
	$ cd ~

Create file
	$ touch <file name>
	If file is long
	$ less <file name>

	To exit from "less", hit "q"

Edit file
	$ vim <file name>
	Press "i" for insert mode
	Enter anthing you want to put as content
	Press Esc then ":wq!" for save & exit

Edit file
	$ nano <file name>
	Enter anthing you want to put as content
	Press ctrl + X for exit
	Then hit Enter

Move file
	$ mv <1st file path> <2nd file path>
	An example:
	$ sudo mv -v /home/usman/react-crypto-prices/build/* /var/www/html

Copy file
	$ cp <1st file path> <2nd file path>

To search file or folder location
	$ which <file name>

View content of file
	$ cat <file path>

The most important command is "tail". Tail can be used to read the last lines from a file. Examples:
Get the last 100 lines from the Debian mail log file:
	$ tail -n 100 /var/log/mail.log

To get all newly added lines from a log file in realtime on the shell, use the command:
	$ tail -f /var/log/mail.log

To remove file
	$ rm <file name>

Create directory
	$ mkdir <directory name>

To remove directory
	$ rmdir <directory name>

To remove a directory that contains other files or directories, use the following command.
	$ rm -r <directory name>
	$ rm -R <directory name>

Executing the above command would delete all files and directories in the directory named in the command. However, it would also present a prompt for approval to delete each of the files. If you don't want to receive a prompt for each file, use the following command instead.
	$ rm -rf <directory name>



======
System
======
Print network informationn. Just like "ipconfig" on Windows
	$ ifconfig

For wireless
	$ iwconfig

Get summary of system
	$ uname -a

Harddrive
	$ blkid

Display process
	$ top

Available and unavailable disk space
	$ df

Print list of devices. like usb
	$ lsusb

	$ lspci

To restart
	$ sudo shutdown -r

To shutdown
	$ sudo shutdown -h now
	Wait for 10 minutes before shutdown.
	$ sudo shutdown -h 10



=======================
User, Group permissions
=======================
To display all users run following command:
	$ compgen -u

To display all groups run following command:
	$ compgen -g

To create new user
	$ adduser <username>

Print user detail
	$ id <username>

Assign sudo privileges to a user
	$ usermod -aG sudo <username>

Disable root ssh login using password
	$ sudo nano /etc/ssh/sshd_config
	Change propertey "PermitRootLogin" from "yes" to "no" and "PasswordAuthentication" from "yes" to "no"

Change owner of file or directory. Here "-R" is for recursive (for all files and directories inside current directory)
	$ sudo chown -R <username>:<group> <file or directory path>

The "chmod" command alters permissions and the -R switch affects all users. Then it is simply giving the correct permissions to use.
	$ sudo chmod -R 757 <file or directory path>

Helping Link:
	https://www.linux.com/tutorials/how-manage-file-and-folder-permissions-linux/



========
Packages
========
To install package ("apt-get" is Package Manager for debian & ubuntu uses)
	$ sudu apt-get install <package name>

To remove software
	$ sudo apt-get remove <package name>

Ensure that the service is running with the following command:
	$ systemctl status <package or service name>

To install available updates
	$ sudo apt-get update

To upgrade the software
	$ sudo apt upgrade



====
CRON
====
Install cron package if necessary.
	$ sudo apt-get install cron

Ensure that the cron service is running with the following command:
	$ systemctl status cron

Configure the cron job. When you are logged in as your user, you are creating a cron job under that user. Creating a cron jobs owner is helpful when to know who is in charge of the cron as well as how to alter the cron job in the future.
	$ crontab -e

Examples:
Cron for every 1 minute
	* * * * * /home/test/check.php

Cron for every 5 minutes
	*/5 * * * * wget http://example.com/check
	*/5 * * * * curl http://example.com/check/

Helping Link:
	https://help.ubuntu.com/community/CronHowto



==========
Web Server
==========
To stop your web server, you can type:
	$ sudo systemctl stop nginx

To start the web server when it is stopped, type:
	$ sudo systemctl start nginx

To check whether server is running or not:
	$ systemctl status nginx

To stop and then start the service again, type:
	$ sudo systemctl restart nginx

If you are simply making configuration changes, Nginx can often reload without dropping connections. To do this, this command can be used:
	$ sudo systemctl reload nginx

By default, Nginx is configured to start automatically when the server boots. If this is not what you want, you can disable this behavior by typing:
	$ sudo systemctl disable nginx

To re-enable the service to start up at boot, you can type:
	$ sudo systemctl enable nginx













remove all apache2 packages
	$ sudo apt-get purge apache2*


As long as there are no errors through any of that then that should be fine. If you want to check apache is listening
	$ sudo netstat -anop | grep apache


You should see apache listening on port 80. You can also check the status of apache2 by doing
	$ sudo service apache2 status


	$ sudo ufw app list








=====
MySQL
=====
To create a database user, type the following command. Replace username with the user you want to create, and replace password with the user's password:
	GRANT ALL PRIVILEGES ON *.* TO 'username'@'localhost' IDENTIFIED BY 'password';

To explicitly grant the SELECT permission:
	GRANT SELECT ON *.* TO 'username'@'localhost';

MySQL database permissions:
	https://dev.mysql.com/doc/refman/5.5/en/grant.html
