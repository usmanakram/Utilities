To run a command as "root" user, put "sudo" front of the command.

Shorten terminal default string
	$ export PS1="\u$ "

To print your entered commands history
	$ history



===================
Files & Directories
===================
Get current directory path
	$ pwd

List down files & directories inside current directory
	$ ls
	For all (included hidden)
	$ ls -a
	For extra info
	$ ls -l
	For author info as well
	$ ls -author
	For sort (order by size descending), add 'S' flag
	$ ls -laS
	For storing output of command in a file
	$ ls -laS <path of target directory> > file1.txt
	Example:
		$ ls -laS /Users/usmanakram  > file1.txt

To change directory
	$ cd <directory name>

Go to system's absolute root
	$ cd /

Go to current user's home directory
	$ cd ~

Create file
	$ touch <file name>
	If file is long
	$ less <file name>

	To exit from "less", hit "q"

Edit file
	$ vim <file name>
	Press "i" for insert mode
	Enter anthing you want to put as content
	Press Esc then ":wq!" for save & exit
	OR
	Press Esc then ":q!" to quit withoug saving changes

Edit file
	$ nano <file name>
	Enter anthing you want to put as content
	Press ctrl + X for exit
	Then hit Enter

Copy file
	$ cp <1st file path> <2nd file path>

	For interactive mode. CLI ask befor overwriting file
	$ cp -i <1st file path> <2nd file path>
	
	Does not overwrite the file
	$ cp -n <1st file path> <2nd file path>
	
	Update destination file only when source file is different (different content) from destination file
	$ cp -u <1st file path> <2nd file path>
	
	Print info at screen while copying
	$ cp -v <1st file path> <2nd file path>

	Copy all text files from current directory to Desktop
	$ cp *.txt /home/user/Desktop

To copy directory
	$ cp -R <directory path> <location path>

To search file or folder location
	$ which <file name>

View content of file
	$ cat <file path>
	With line number
	$ cat -n <file path>
	With line number (only non-blank)
	$ cat -b <file path>
	For squize multiple blank lines into one
	$ cat -s <file path>
	To append "$" after every line
	$ cat -e <file path>

View content of multiple files
	$ cat <1st file path> <2nd file path>

Create new file and put some text
	$ cat > <file path>
	Type some content 
	Press ctrl + d for save & exit

Copy content of 1st file and append into 2nd file
	$ cat file1.txt >> file2.txt

Move file or directory
	$ mv <1st file path> <2nd file path>
	An example:
	$ sudo mv -v /home/usman/react-crypto-prices/build/* /var/www/html

	For interactive mode. CLI ask befor overwriting file
	$ mv -i <1st file path> <2nd file path>
	Update destination file only when source file is different (different content) from destination file
	$ mv -u <1st file path> <2nd file path>
	Print info at screen while moving
	$ mv -v <1st file path> <2nd file path>


The most important command is "tail". Tail can be used to read the last lines from a file. Examples:
Get the last 100 lines from the Debian mail log file:
	$ tail -n 100 /var/log/mail.log

To get all newly added lines from a log file in realtime on the shell, use the command:
	$ tail -f /var/log/mail.log

To search for a particular string/word inside a file
	$ grep <search text> <file path>
	For case insensitive
	$ grep -i <search text> <file path>
	For display line number as well
	$ grep -n <search text> <file path>
	For getting lines other matching word line
	$ grep -v <search text> <file path>
	For getting the count of lines having matching word
	$ grep -c <search text> <file path>

To print file content (sorted)
	$ sort <file path>
	For reverse order
	$ sort -r <file path>
	For case insensitive
	$ sort -f <file path>
	For numeric sort
	$ sort -n <file path>

To print multiple files content (sorted)
	$ sort <1st file path> <2nd file path>

Pipe "|" command is used to output the result of one command as input to another command.
Pipe is used to perform two operations in the same command.
	$ grep <search text> <file path> | sort

To remove file
	$ rm <file name>

To remove directory
	$ rmdir <directory name>

To remove a directory that contains other files or directories, use the following command.
	$ rm -r <directory name>
	$ rm -R <directory name>

Executing the above command would delete all files and directories in the directory named in the command. However, it would also present a prompt for approval to delete each of the files. If you don't want to receive a prompt for each file, use the following command instead.
	$ rm -rf <directory name>

Create directory
	$ mkdir <directory name>
	For creating both, a new parent directory and a sub-directory
	$ mkdir -p <directory name>
	OR
	$ mkdir -parents <directory name>
	Create multiple directories
	$ mkdir -p folder1/{folder2,folder3,folder4}

Remove directory
	$ rmdir <directory name>
	Remove both, parent & child
	$ rmdir -p



======
System
======
Print network informationn. Just like "ipconfig" on Windows
	$ ifconfig

For wireless
	$ iwconfig

Get summary of system
	$ uname -a

Harddrive
	$ blkid

Display process
	$ top

Available and unavailable disk space
	$ df

Print list of devices. like usb
	$ lsusb

	$ lspci

To restart
	$ sudo shutdown -r

To shutdown
	$ sudo shutdown -h now
	Wait for 10 minutes before shutdown.
	$ sudo shutdown -h 10



=======================
User, Group permissions
=======================
To display all users run following command:
	$ compgen -u

To display all groups run following command:
	$ compgen -g

To create new user
	$ adduser <username>

Print user detail
	$ id <username>

Assign sudo privileges to a user
	$ usermod -aG sudo <username>

Disable root ssh login using password
	$ sudo nano /etc/ssh/sshd_config
	Change propertey "PermitRootLogin" from "yes" to "no" and "PasswordAuthentication" from "yes" to "no"

Change owner of file or directory. Here "-R" is for recursive (for all files and directories inside current directory)
	$ sudo chown -R <username>:<group> <file or directory path>

The "chmod" command alters permissions and the -R switch affects all users. Then it is simply giving the correct permissions to use.
	$ sudo chmod -R 757 <file or directory path>

Helping Link:
	https://www.linux.com/tutorials/how-manage-file-and-folder-permissions-linux/


Change permission of file or directory
	$ chmod
	Example:
		$ chmod g+wx,o-w test1.txt

Change owner of file or directory
	$ chown

Change group ownership of file or directory
	$ chgrp



========
Packages
========
To install package ("apt-get" is Package Manager for debian & ubuntu uses)
	$ sudu apt-get install <package name>

To remove software
	$ sudo apt-get remove <package name>

Ensure that the service is running with the following command:
	$ systemctl status <package or service name>

To install available updates
	$ sudo apt-get update

To upgrade the software
	$ sudo apt upgrade



====
CRON
====
Install cron package if necessary.
	$ sudo apt-get install cron

Ensure that the cron service is running with the following command:
	$ systemctl status cron

Configure the cron job. When you are logged in as your user, you are creating a cron job under that user. Creating a cron jobs owner is helpful when to know who is in charge of the cron as well as how to alter the cron job in the future.
	$ crontab -e

Examples:
Cron for every 1 minute (running a script)
	* * * * * /home/test/check.php

Cron for every 5 minutes (hitting a url)
	*/5 * * * * wget http://example.com/check
	*/5 * * * * curl http://example.com/check/

Helping Link:
	https://help.ubuntu.com/community/CronHowto


Cron for run after 30 seconds of sleep
	* * * * * sleep 30; wget http://example.com/check


To start the cron service (for Debian or Ubuntu or Mint), use:
	# /etc/init.d/cron start
	OR
	$ sudo /etc/init.d/cron start
	OR
	$ sudo service cron start

To stop the cron service(for Debian or Ubuntu or Mint), use:
	# /etc/init.d/cron stop
	OR
	$ sudo /etc/init.d/cron stop
	OR
	$ sudo service cron stop

To restart the cron service(for Debian or Ubuntu or Mint), use:
	# /etc/init.d/cron restart
	OR
	$ sudo /etc/init.d/cron restart
	OR
	$ sudo service cron restart

Reference Link:
	https://www.cyberciti.biz/faq/howto-linux-unix-start-restart-cron/


Do a full process list and grep for cron
	$ ps aux | grep cron

Reference Link:
	https://stackoverflow.com/questions/24012666/why-my-cron-job-executing-multiple-times

sudo service cron reload

==========
Web Server
==========
To stop your web server, you can type:
	$ sudo systemctl stop nginx

To start the web server when it is stopped, type:
	$ sudo systemctl start nginx

To check whether server is running or not:
	$ systemctl status nginx

To stop and then start the service again, type:
	$ sudo systemctl restart nginx

If you are simply making configuration changes, Nginx can often reload without dropping connections. To do this, this command can be used:
	$ sudo systemctl reload nginx

By default, Nginx is configured to start automatically when the server boots. If this is not what you want, you can disable this behavior by typing:
	$ sudo systemctl disable nginx

To re-enable the service to start up at boot, you can type:
	$ sudo systemctl enable nginx

To find "php.ini" file
	$ php -i | grep 'Configuration File'

Add extension in file
	$ echo "extension=mongodb.so" >> /usr/local/etc/php/conf.d/mongodb.ini
	RUN echo "extension=mongodb.so" >> /opt/bitnami/php/etc/php.ini


Apache and PHP log files directory:
	By default, /var/log/apache2/error.log.
	This can be configured in /etc/php5/apache2/php.ini.


==========================
Swap File to extend memory
==========================
First, we can create an empty 1GB file by typing:
	$ sudo fallocate -l 1G /swapfile

We can format it as swap space by typing:
	$ sudo mkswap /swapfile

Finally, we can enable this space so that the kernel begins to use it by typing:
	$ sudo swapon /swapfile

The system will only use this space until the next reboot, but the only time that the server is likely to exceed its available memory is during the build processes, so this shouldn’t be a problem.

Reference Links:
	https://www.digitalocean.com/community/tutorials/how-to-install-laravel-with-an-nginx-web-server-on-ubuntu-14-04#create-swap-file-(optional)

	https://stackoverflow.com/questions/18116261/php-composer-update-cannot-allocate-memory-error-using-laravel-4



========================
Examples of curl request
========================
/*
GET ALL POSTS:
*/

curl -X GET \
http://localhost:8000/api/posts \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-H 'Authorization: Bearer <TOKEN>'

/*
GET SINGLE POST WITH ID: 1
*/

curl -X GET \
http://localhost:8000/api/posts/1 \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-H 'Authorization: Bearer <TOKEN>'

/*
UPDATE POST WITH ID: 1, SETTING TITLE AND CONTENT
*/

curl -X PUT \
http://localhost:8000/api/posts/1 \
-d '{ "title": "New title", "content" : "New description" }' \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-H 'Authorization: Bearer <TOKEN>'

/*
DELETE POST WITH ID: 1
*/

curl -X "DELETE" \
http://localhost:8000/api/posts/1 \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-H 'Authorization: Bearer <TOKEN>'

/*
CREATE NEW POST, WITH TITLE: 'New posts' AND CONTENT: 'New post description'
*/

curl -X POST \
http://localhost:8000/api/posts \
-d '{ "title": "New post", "content" : "New post description" }' \
-H 'Accept: application/json' \
-H 'Content-Type: application/json' \
-H 'Authorization: Bearer <TOKEN>'


========================
Download file using curl
========================
$ curl https://github.com/usmanakram/react-crypto-prices/archive/master.zip -O -J -L

Options:
	use -L in case there is a redirect found.
	use -O for remote filenames (master.zip)
	use -J (use with -O) to allow remote header filename (xampp-cli-master.zip)

Or use -o to create your own filename:
	$ curl https://github.com/usmanakram/react-crypto-prices/archive/master.zip -L -o MyFilename.zip

Reference link:
	https://askubuntu.com/questions/285976/download-zip-file-with-curl-command




remove all apache2 packages
	$ sudo apt-get purge apache2*

As long as there are no errors through any of that then that should be fine. If you want to check apache is listening
	$ sudo netstat -anop | grep apache

You should see apache listening on port 80. You can also check the status of apache2 by doing
	$ sudo service apache2 status

	$ sudo ufw app list








=====
MySQL
=====
To create a database user, type the following command. Replace username with the user you want to create, and replace password with the user's password:
	GRANT ALL PRIVILEGES ON *.* TO 'username'@'localhost' IDENTIFIED BY 'password';

To explicitly grant the SELECT permission:
	GRANT SELECT ON *.* TO 'username'@'localhost';

MySQL database permissions:
	https://dev.mysql.com/doc/refman/5.5/en/grant.html





