To generate encryption key (in .env)
	$ php artisan key:generate

Migrate single table
	$ php artisan migrate --path=/database/migrations/test/

To create database table migration file
	$ php artisan make:migration create_posts_table --create=posts

To redump file
	$ composer dump-autoload

To run migration
	$ php artisan migrate

To create a model
	$ php artisan make:model Task

To create a controller
	$ php artisan make:controller UsersController

To list down all defined routes
	$ php artisan route:list

=====================
START: Event Commands
=====================
To cache a manifest of all of your application's events and listeners
	$ php artisan event:cache

To destroy the cache
	$ php artisan event:clear

To display a list of all events and listeners registered by application
	$ php artisan event:list

To generate event listener:
event:generate command will automatically import the proper event class and type-hint the event on the handle method. Within the handle method, you may perform any actions necessary to respond to the event:
	$ php artisan event:generate

========================================
Keep the socket running with supervisord
========================================
To install supervisor

	# On Debian / Ubuntu
	$ apt install supervisor

	# On Red Hat / CentOS
	$ yum install supervisor
	
	$ systemctl enable supervisor

Once installed, add a new process that supervisor needs to keep running. You place your configurations in the 
	/etc/supervisor/conf.d (Debian/Ubuntu) 
	or 
	/etc/supervisord.d (Red Hat/CentOS) 
directory.
Within that directory, create a new file called "websockets.conf".
	Content:
		[program:websockets]
		command=/usr/bin/php /home/laravel-echo/laravel-websockets/artisan websockets:serve
		numprocs=1
		autostart=true
		autorestart=true
		user=laravel-echo

Once created, instruct supervisor to reload its configuration files (without impacting the already running supervisor jobs).

	$ supervisorctl update
	$ supervisorctl start websockets

Reference Link:
	https://docs.beyondco.de/laravel-websockets/1.0/basic-usage/starting.html#keeping-the-socket-server-running-with-supervisord

========================================
Keep the worker running with supervisord
========================================

[program:laravel-worker]
process_name=%(program_name)s_%(process_num)02d
command=php /home/forge/app.com/artisan queue:work sqs --sleep=3 --tries=3
autostart=true
autorestart=true
user=forge
numprocs=8
redirect_stderr=true
stdout_logfile=/home/forge/app.com/worker.log


LIVE (aws):
[program:laravel-worker]
process_name=%(program_name)s_%(process_num)02d
command=/usr/bin/php /var/www/html/bittrain_exchange_api/artisan queue:work --sleep=3 --tries=10
autostart=true
autorestart=true
user=root
numprocs=1
redirect_stderr=true
stdout_logfile=/var/www/html/bittrain_exchange_api/storage/logs/worker.log

[program:laravel-exchange-stats-worker]
process_name=%(program_name)s_%(process_num)02d
command=/usr/bin/php /var/www/html/bittrain_exchange_api/artisan queue:work --queue=exchange-stats --sleep=3 --tries=10
autostart=true
autorestart=true
user=root
numprocs=1
redirect_stderr=true
stdout_logfile=/var/www/html/bittrain_exchange_api/storage/logs/laravel-exchange-stats-worker.log


$ sudo supervisorctl reread
$ sudo supervisorctl update
$ sudo supervisorctl start laravel-worker:*

=====================
Cron: Task Scheduling
=====================
Add following cron for laravel Task Scheduling.
	* * * * * php <path of project's root>/artisan schedule:run >> /dev/null 2>&1
	* * * * * php /var/www/html/bittrain_exchange_api/artisan schedule:run >> /dev/null 2>&1




php artisan config:cache
php artisan config:clear
php artisan cache:clear


Laravel file permissions:
cd [..LARAVEL PROJECT ROOT]
sudo find . -type f -exec chmod 644 {} \;
sudo find . -type d -exec chmod 755 {} \;
sudo chmod -R 777 ./storage
sudo chmod -R 777 ./bootstrap/cache/



===
TMP
===
find storage bootstrap -type d -exec chmod 755 {} \;
find storage bootstrap -type f -exec chmod 644 {} \;


sudo chgrp -R www-data storage bootstrap/cache
sudo chmod -R ug+rwx storage bootstrap/cache


chown -R www-data:www-data storage bootstrap/cache