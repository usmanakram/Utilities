#################### START: Environment Variables in Windows ####################

To display all the environment variables (in NAME=VALUE pairs)
	set

To display a particular variable (in NAME=VALUE pair)
	set [variable]
	Example
	set USERNAME

	OR, use "echo" command with variable name enclosed within a pair of '%'
	echo %COMPUTERNAME%

To set an environment variable called MY_VAR
	set MY_VAR=hello

To display
	set MY_VAR

To unset an environment variable
	set MY_VAR=

Print system PATH variable
	echo %PATH%

To append a directory in front of the existing PATH
	set PATH=c:\myBin;%PATH%

Reference:
	https://www3.ntu.edu.sg/home/ehchua/programming/howto/Environment_Variables.html#:~:text=2.3%20Using%20an%20Environment%20Variable,%22%20echo%20%25varname%25%20%22.

##################### END: Environment Variables in Windows #####################

Windows IP Configuration
	ipconfig

Get the Interface/Network Name:
	netsh interface show interface

Enable the interface/network:
	netsh interface set interface "Interface Name" enabled

################################## START: Wifi Hotspot ##################################
To check if wireless adapter supports Hosted Networks in Windows 10:
	NETSH WLAN show drivers

To create a wireless Hosted Network in Windows 10:
	NETSH WLAN set hostednetwork mode=allow ssid=Your_SSID key=Your_Passphrase

To activate/start Hosted Network:
	NETSH WLAN start hostednetwork

To deactivate/stop Hosted Network:
	NETSH WLAN stop hostednetwork

To enable or disable a wireless Hosted Network:
	NETSH WLAN set hostednetwork mode=allow
	NETSH WLAN set hostednetwork mode= disallow

To change SSID or network security:
	NETSH WLAN set hostednetwork ssid=Your_New_SSID
	NETSH WLAN set hostednetwork key=Your_New_Passphrase

To shows the mode and SSID name in use, max number of clients that can connect, type of authentication, and cipher:
	NETSH WLAN show hostednetwork

To show network security key among other settings, similar to the previous command:
	NETSH WLAN show hostednetwork setting=security
################################### END: Wifi Hotspot ###################################




To display all wifi profiles ever connected to
	netsh wlan show profile

To save the password of all networks/profiles in its respective files
	mkdir D:\wifi
	netsh wlan export profile folder=D:\wifi\ key=clear



#################### START: WSL ####################
Windows Subsystem for Linux Installation Guide for Windows 10
URL:
	https://docs.microsoft.com/en-us/windows/wsl/install-win10


To check the WSL version assigned to each of the Linux distributions you have installed by opening the PowerShell command line and entering the command (only available in Windows Build 18362 or higher):
	$ wsl -l -v
	OR
	$ wsl --list --verbose

To set a distribution to be backed by either version of WSL please run:
	$ wsl --set-version <distribution name> <versionNumber>

To set WSL 2 as your default version
Open PowerShell and run this command to set WSL 2 as the default version when installing a new Linux distribution:
	$ wsl --set-default-version 2




You can also use windows commands inside WSL's Linux Terminal.
Try opening a Linux distribution (ie Ubuntu), be sure that you are in the Linux home directory by entering this command: cd ~.
Then open your Linux file system in File Explorer by entering (don't forget the period at the end):
	$ powershell.exe /c start .





// START
A quick cheeky helper, that you might want to add to your powershell profile, in case you occasionally use you wsl distro's curl to test things listening on localhost

function Get-WSL2WindowsHost {
  return wsl cat /etc/resolv.conf `| grep nameserver `| cut -d ' ' -f 2
}

You can then do:

# imagine you have something listening on port 3000
	$ wsl curl http://$(Get-WSL2WindowsHost):3000

Reference links:
	https://github.com/Microsoft/WSL/issues/1032
// END


START
Linux IP
	$ ip addr | grep inet

Reference links:
	https://github.com/microsoft/WSL/issues/4392
// END


// START
#!/bin/bash

NEWIP=`ifconfig | grep eth0 -A1 | tail -n1 | cut -d ' '  -f10 `

# delete IP from windows hosts file
sed '/wsl/d' -i '/mnt/c/Windows/System32/drivers/etc/hosts' || true

echo "$NEWIP		wsl" >> '/mnt/c/Windows/System32/drivers/etc/hosts'

Thats the script. Make sure your user has the permission to modify / create files in the "/Windows/System32/drivers/etc/" folder because sed will create a temp file in this directory. Run this script everytime you start wsl and you'll be fine.


Reference links:
	https://github.com/microsoft/WSL/issues/5298
// END
##################### END: WSL #####################

